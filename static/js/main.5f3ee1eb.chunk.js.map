{"version":3,"sources":["reducers/item.reducer.js","reducers/index.js","store/index.js","components/header.component.js","components/item-details.component.js","components/item-list.component.js","components/item-form.component.js","components/app.js","serviceWorker.js","index.js"],"names":["initialState","items","itemId","loading","appReducer","combineReducers","state","type","payload","filter","item","id","rootReducer","action","middlewares","createLogger","collapsed","getState","logEntry","error","thunkMiddleware","reduxMiddleware","f","HearderComponent","useSelector","Box","mb","Paper","className","length","ItemDetailsComponent","dispatch","useDispatch","TableRow","key","TableCell","name","desc","align","IconButton","edge","aria-label","onClick","setTimeout","ItemListComponent","shallowEqual","useEffect","localData","sessionStorage","getItem","JSON","parse","setItem","stringify","TableContainer","component","style","overflow","Table","TableHead","height","tableLayout","TableBody","map","Backdrop","open","zIndex","CircularProgress","ItemFormComponent","formik","useFormik","initialValues","validationSchema","Yup","required","onSubmit","values","uuidv4","resetForm","touched","f1_tou","f2_tou","errors","f1_err","f2_err","handleSubmit","Grid","container","direction","spacing","xs","TextField","label","fullWidth","helperText","getFieldProps","Button","variant","color","App","AppBar","position","Toolbar","Typography","mt","Container","maxWidth","Boolean","window","location","hostname","match","store","preloadedState","enhancers","applyMiddleware","composedEnhancers","compose","createStore","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5f3ee1eb.chunk.js","sourcesContent":["const initialState = {\r\n  items: [],\r\n  itemId: \"\",\r\n  loading: false\r\n};\r\n\r\nexport const itemReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"GET_ITEMS\":\r\n      return { ...state, items: [...state.items, ...payload], loading: false };\r\n    case \"ADD_ITEM\":\r\n      return { ...state, items: [...state.items, payload], loading: false };\r\n    case \"REMOVE_ITEM\":\r\n      return {\r\n        ...state,\r\n        items: [...state.items.filter(item => item.id !== payload)],\r\n        loading: false\r\n      };\r\n    case \"LOAD_ITEM\":\r\n      return { ...state, loading: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { itemReducer } from \"./item.reducer\";\r\n\r\nconst appReducer = combineReducers({\r\n  items: itemReducer\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport rootReducer from \"../reducers\";\r\n\r\n// log middleware\r\nconst loggerMiddleware = createLogger({\r\n  collapsed: (getState, action, logEntry) => !logEntry.error\r\n});\r\n\r\n// thunk middleware\r\nlet middlewares = [thunkMiddleware];\r\n// log for development only\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  middlewares = [...middlewares, loggerMiddleware];\r\n}\r\n\r\n// redux dev tool middleware\r\nconst reduxMiddleware =\r\n  process.env.NODE_ENV !== \"production\" && window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    : f => f;\r\n\r\n// configure store\r\nexport const configureStore = preloadedState => {\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n  const enhancers = [middlewareEnhancer, reduxMiddleware];\r\n  const composedEnhancers = compose(...enhancers);\r\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\r\n  return store;\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box, Paper } from \"@material-ui/core\";\r\n\r\nexport const HearderComponent = () => {\r\n  const { items } = useSelector(state => state.items);\r\n\r\n  return (\r\n    <Box mb={5}>\r\n      <Paper className=\"paper\">\r\n        <div className=\"heading\">\r\n          Hello, currently you have {items.length} item{items.length !== 1 && \"s\"}...\r\n        </div>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { IconButton, TableRow, TableCell } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nexport const ItemDetailsComponent = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <TableRow key={item.id}>\r\n      <TableCell>{item.id}</TableCell>\r\n      <TableCell>{item.name}</TableCell>\r\n      <TableCell>{item.desc}</TableCell>\r\n      <TableCell align=\"right\">\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"delete\"\r\n          onClick={() => {\r\n            dispatch({ type: \"LOAD_ITEM\", payload: item.id });\r\n            setTimeout(() => dispatch({ type: \"REMOVE_ITEM\", payload: item.id }), 2000);\r\n          }}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\r\nimport { Box, Paper, CircularProgress, Backdrop } from \"@material-ui/core\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport { ItemDetailsComponent } from \"./item-details.component\";\r\n\r\nexport const ItemListComponent = () => {\r\n  const { items, loading } = useSelector(state => state.items, shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"LOAD_ITEM\" });\r\n    const localData = sessionStorage.getItem(\"items\");\r\n    setTimeout(\r\n      () =>\r\n        dispatch({\r\n          type: \"GET_ITEMS\",\r\n          payload: localData ? JSON.parse(localData) : []\r\n        }),\r\n      2000\r\n    );\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"items\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {items.length > 0 && (\r\n        <Box mb={5}>\r\n          <TableContainer component={Paper}>\r\n            <div style={{ overflow: \"auto\" }}>\r\n              <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Id</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n              </Table>\r\n              <div style={{ overflow: \"auto\", height: \"400px\" }}>\r\n                <Table style={{ tableLayout: \"fixed\" }}>\r\n                  <TableBody>\r\n                    {items.map(item => {\r\n                      return <ItemDetailsComponent item={item} key={item.id} />;\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </div>\r\n            </div>\r\n          </TableContainer>\r\n        </Box>\r\n      )}\r\n      <Backdrop open={loading} style={{ zIndex: 100 }}>\r\n        <CircularProgress />\r\n      </Backdrop>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Paper, Grid, TextField, Button } from \"@material-ui/core\";\r\n\r\nexport const ItemFormComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: { name: \"\", desc: \"\" },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(\"Required\"),\r\n      desc: Yup.string().required(\"Required\")\r\n    }),\r\n    onSubmit: values => {\r\n      const { name, desc } = values;\r\n      dispatch({ type: \"LOAD_ITEM\" });\r\n      setTimeout(() => {\r\n        dispatch({ type: \"ADD_ITEM\", payload: { name, desc, id: uuidv4() } });\r\n        formik.resetForm();\r\n      }, 2000);\r\n    }\r\n  });\r\n\r\n  const { name: f1_tou, desc: f2_tou } = formik.touched;\r\n  const { name: f1_err, desc: f2_err } = formik.errors;\r\n  return (\r\n    <Paper className=\"paper\">\r\n      <form className=\"form\" onSubmit={formik.handleSubmit}>\r\n        <Grid container direction=\"column\" spacing={5}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"name\"\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              fullWidth\r\n              helperText={f1_tou && f1_err ? f1_err : \"\"}\r\n              error={f1_tou && f1_err ? true : false}\r\n              {...formik.getFieldProps(\"name\")}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"desc\"\r\n              label=\"Description\"\r\n              type=\"text\"\r\n              fullWidth\r\n              helperText={f2_tou && f2_err ? f2_err : \"\"}\r\n              error={f2_tou && f2_err ? true : false}\r\n              {...formik.getFieldProps(\"desc\")}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { AppBar, Toolbar, Typography, Container, Box } from \"@material-ui/core\";\r\nimport { HearderComponent } from \"./header.component\";\r\nimport { ItemListComponent } from \"./item-list.component\";\r\nimport { ItemFormComponent } from \"./item-form.component\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Fragment>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">Todo List</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box mt={5}>\r\n        <Container maxWidth=\"md\">\r\n          <HearderComponent />\r\n          <ItemListComponent />\r\n          <ItemFormComponent />\r\n        </Container>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./store\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}